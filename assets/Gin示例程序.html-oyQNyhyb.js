import{_ as n,c as s,o as a,a as p}from"./app-REenseam.js";const t="/yi-doc/images/dev/go/gin/moudle_proxy.png",e="/yi-doc/images/dev/go/gin/gin_run.png",l="/yi-doc/images/dev/go/gin/interface_test.png",i="/yi-doc/images/dev/go/gin/union.png",c={},o=p(`<h1 id="一、gin-示例程序" tabindex="-1"><a class="header-anchor" href="#一、gin-示例程序"><span>一、Gin 示例程序</span></a></h1><h2 id="_1、搭建-gin-服务器步骤" tabindex="-1"><a class="header-anchor" href="#_1、搭建-gin-服务器步骤"><span>1、搭建 Gin 服务器步骤</span></a></h2><ol><li>初始化一个 Go 模块</li></ol><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">go</span> mod init 模块名称</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>go mod init</code>命令用于初始化一个 Go 模块，其作用如下：</p><ol><li>创建模块文件：命令会在当前目录下创建一个新的<code>go.mod</code>文件，该文件用于记录项目依赖关系和模块信息。</li><li>定义模块名称：运行该命令需要提供一个模块名称作为参数。这个名称通常是一个包含项目的源代码的版本库的路径（例如，GitHub 或 GitLab 上的路径），它将成为您的项目的唯一标识符。</li><li>初始化依赖关系：命令会初始化一个依赖关系图，它会随着添加和删除依赖包而变化。这个依赖关系图会记录项目中使用的外部包，以及它们的版本信息。</li></ol><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">go</span> mod init gin<span class="token operator">-</span>demo</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>在 GoLand 中打开目录</li></ol><p>配置 Go Module 代理地址：<code>https://goproxy.io</code><img src="`+t+`" alt="image.png"></p><ol start="3"><li>创建<code>main.go</code>文件</li></ol><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/ping&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span></span>
<span class="line">			<span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;pong&quot;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8080</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>获取<code>Gin</code>包</li></ol><p>运行项目，根据提示使用<code>go get</code>命令获取<code>gin</code>包。</p><p><code>go get</code>命令用于从远程代码仓库中获取并安装 Go 包（也称为模块），具体如下：</p><ol><li><p>下载和安装包：命令可以从指定的远程代码仓库中下载 Go 包，并将其安装到 <code>GOPATH</code> 中。</p></li><li><p>自动导入包：一旦包被下载并安装，还会自动更新项目代码以导入和使用这些包。这使得可以方便地将其他人编写的 Go 代码集成到自己的项目中。</p></li><li><p>版本管理：命令可以使用版本标签（tag）或分支（branch）信息，以确保获取的是特定版本的包。这有助于管理项目的依赖关系和确保构建的稳定性。</p></li><li><p>更新依赖：如果之前使用该命令安装了某个包，并且想要更新该包以获取新的功能或修复错误，您可以再次运行命令来更新包。</p><p>安装成功后，代码将不会再提示找不到包。 运行即可： <img src="`+e+`" alt="image.png"></p></li></ol><h2 id="_2、接口参数获取" tabindex="-1"><a class="header-anchor" href="#_2、接口参数获取"><span>2、接口参数获取</span></a></h2><h3 id="_1-get-请求获取路径参数和请求参数" tabindex="-1"><a class="header-anchor" href="#_1-get-请求获取路径参数和请求参数"><span>(1) GET 请求获取路径参数和请求参数</span></a></h3><p>路径参数和请求参数直接从<code>context</code>中获取。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 使用默认中间件创建一个gin路由器</span></span>
<span class="line">	<span class="token comment">// logger and recovery (crash-free) 中间件</span></span>
<span class="line">	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// get 获取路径参数和请求参数</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/getMsg/:name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 获取路径参数</span></span>
<span class="line">		name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// 获取请求参数</span></span>
<span class="line">		username <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultQuery</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		password <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span></span>
<span class="line">			<span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span>     name<span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> username<span class="token punctuation">,</span></span>
<span class="line">			<span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> password<span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8078&quot;</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8078</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><code>gin.H{}</code></strong></p><p><code>gin.H{}</code>是一个用于创建并初始化一个<code>map[string]interface{}</code>类型的字典。<code>gin.H{}</code>通常用于构建 HTTP 响应的 JSON 数据或设置请求的参数。其作用如下：</p><ol><li>创建映射：<code>gin.H{}</code>创建了一个空的映射，可以在其中添加键值对，用于表示不同的数据。</li><li>构建 JSON 响应：在 Gin 框架中，可以使用<code>gin.H{}</code>构建 HTTP 响应的 JSON 数据。可以向其中添加键值对，表示要返回的 JSON 数据的字段和值。</li></ol><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line">c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span></span>
<span class="line">    <span class="token string">&quot;message&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Hello, World!&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span>  <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-post-请求获取请求体中的参数" tabindex="-1"><a class="header-anchor" href="#_2-post-请求获取请求体中的参数"><span>(2) POST 请求获取请求体中的参数</span></a></h3><p>请求体使用结构体接收。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line">	<span class="token string">&quot;net/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// PostParam 将 post 请求体与结构体绑定</span></span>
<span class="line"><span class="token keyword">type</span> PostParam <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Username <span class="token builtin">string</span> <span class="token string">\`json:&quot;username&quot;\`</span></span>
<span class="line">	Password <span class="token builtin">string</span> <span class="token string">\`json:&quot;password&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 使用默认中间件创建一个gin路由器</span></span>
<span class="line">	<span class="token comment">// logger and recovery (crash-free) 中间件</span></span>
<span class="line">	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// POST 获取请求体参数</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/testBind&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token keyword">var</span> postParam PostParam</span>
<span class="line"></span>
<span class="line">		<span class="token comment">// 出现错误</span></span>
<span class="line">		<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>postParam<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token keyword">return</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> postParam<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8078&quot;</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8078</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-文件的接收与返回" tabindex="-1"><a class="header-anchor" href="#_3-文件的接收与返回"><span>(3) 文件的接收与返回</span></a></h3><h4 id="接收文件" tabindex="-1"><a class="header-anchor" href="#接收文件"><span>接收文件</span></a></h4><p>使用<code>form-data</code>接收文件，使用<code>SaveUploadedFile()</code>保存文件。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line">	<span class="token string">&quot;net/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// PostParam 将 post 请求体与结构体绑定</span></span>
<span class="line"><span class="token keyword">type</span> PostParam <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Username <span class="token builtin">string</span> <span class="token string">\`json:&quot;username&quot;\`</span></span>
<span class="line">	Password <span class="token builtin">string</span> <span class="token string">\`json:&quot;password&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 存储文件路径</span></span>
<span class="line"><span class="token keyword">const</span> dist <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;./&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 使用默认中间件创建一个gin路由器</span></span>
<span class="line">	<span class="token comment">// logger and recovery (crash-free) 中间件</span></span>
<span class="line">	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 接收文件</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/uploadFile&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// 接收单文件</span></span>
<span class="line">		file<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">FormFile</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token comment">// 保存到服务器</span></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">SaveUploadedFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> dist<span class="token operator">+</span>file<span class="token punctuation">.</span>Filename<span class="token punctuation">)</span></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span></span>
<span class="line">			<span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;上传成功&quot;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8078&quot;</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8078</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请求： <img src="`+l+`" alt="image.png"></p><h4 id="传送文件到前端" tabindex="-1"><a class="header-anchor" href="#传送文件到前端"><span>传送文件到前端</span></a></h4><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line">	<span class="token string">&quot;net/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// PostParam 将 post 请求体与结构体绑定</span></span>
<span class="line"><span class="token keyword">type</span> PostParam <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Username <span class="token builtin">string</span> <span class="token string">\`json:&quot;username&quot;\`</span></span>
<span class="line">	Password <span class="token builtin">string</span> <span class="token string">\`json:&quot;password&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 存储文件路径</span></span>
<span class="line"><span class="token keyword">const</span> dist <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;./&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 使用默认中间件创建一个gin路由器</span></span>
<span class="line">	<span class="token comment">// logger and recovery (crash-free) 中间件</span></span>
<span class="line">	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 下载文件</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/downloadFile&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		filepath <span class="token operator">:=</span> <span class="token string">&quot;./1.jpg&quot;</span></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8078&quot;</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8078</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、路由分组与中间件" tabindex="-1"><a class="header-anchor" href="#_3、路由分组与中间件"><span>3、路由分组与中间件</span></a></h2><h4 id="路由分组" tabindex="-1"><a class="header-anchor" href="#路由分组"><span>路由分组</span></a></h4><p>使用路由分组代码结构更清晰、可维护，并且同一个路由分组会共享中间件。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line">	<span class="token string">&quot;net/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// PostParam 将 post 请求体与结构体绑定</span></span>
<span class="line"><span class="token keyword">type</span> PostParam <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Username <span class="token builtin">string</span> <span class="token string">\`json:&quot;username&quot;\`</span></span>
<span class="line">	Password <span class="token builtin">string</span> <span class="token string">\`json:&quot;password&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 存储文件路径</span></span>
<span class="line"><span class="token keyword">const</span> dist <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;./&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 使用默认中间件创建一个gin路由器</span></span>
<span class="line">	<span class="token comment">// logger and recovery (crash-free) 中间件</span></span>
<span class="line">	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// 创建路由分组</span></span>
<span class="line">	api <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;/api&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// GET 获取路径参数和请求参数</span></span>
<span class="line">		api<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/getMsg/:name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token comment">// 获取路径参数</span></span>
<span class="line">			name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">			<span class="token comment">// 获取请求参数</span></span>
<span class="line">			username <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultQuery</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span></span>
<span class="line">			password <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span></span>
<span class="line">				<span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span>     name<span class="token punctuation">,</span></span>
<span class="line">				<span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> username<span class="token punctuation">,</span></span>
<span class="line">				<span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> password<span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8078&quot;</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8078</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="中间件" tabindex="-1"><a class="header-anchor" href="#中间件"><span>中间件</span></a></h4><p>Gin 中的中间件指请求到达路由之前或之后执行的操作，其执行顺序符合洋葱模型： <img src="`+i+`" alt="image.png"></p><p>在 Gin 框架中，中间件（Middleware）是一种在请求到达路由处理函数之前或之后执行的函数或操作。中间件用于对请求进行预处理、增加额外的功能、进行身份验证、记录日志、修改请求或响应等操作。它们是一种非常有用的机制，用于增强和扩展 Web 应用程序的功能。 以下是一些中间件的常见应用场景和概念：</p><ol><li><strong>身份验证和授权</strong>：中间件可以用于验证用户的身份并授权访问特定的路由或资源。例如，可以创建一个中间件来检查用户是否已登录，并根据其角色授权对某些路由的访问权限。</li><li><strong>日志记录</strong>：中间件可以用于记录请求和响应的信息，以便进行调试和监控。可以记录请求的方法、路径、响应状态码等信息，并将其存储在日志文件或数据库中。</li><li><strong>跨域资源共享 (CORS)</strong>：中间件可以帮助处理跨域请求，添加必要的响应头，以允许或限制跨域请求。</li><li><strong>压缩响应</strong>：中间件可以用于压缩响应内容，减小传输数据的大小，提高性能。</li><li><strong>请求数据解析</strong>：中间件可以用于解析请求的数据，例如 JSON、表单数据或查询参数，并将其转换为可用于处理的数据结构。</li><li><strong>缓存控制</strong>：中间件可以添加响应头来控制客户端和代理服务器的缓存行为。</li><li><strong>错误处理</strong>：中间件可以用于捕获处理函数中的错误，并返回适当的错误响应。这有助于统一的错误处理逻辑。</li><li><strong>安全性</strong>：中间件可以帮助保护应用程序免受常见的 Web 攻击，如 CSRF（跨站请求伪造）和 XSS（跨站脚本攻击）。</li></ol><p>自定义中间件、使用中间件： 定义中间件函数需要返回<code>gin.HandlerFunc</code>类型。使用中间件可以链式方式调用。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;fmt&quot;</span></span>
<span class="line">	<span class="token string">&quot;github.com/gin-gonic/gin&quot;</span></span>
<span class="line">	<span class="token string">&quot;net/http&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// PostParam 将 post 请求体与结构体绑定</span></span>
<span class="line"><span class="token keyword">type</span> PostParam <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	Username <span class="token builtin">string</span> <span class="token string">\`json:&quot;username&quot;\`</span></span>
<span class="line">	Password <span class="token builtin">string</span> <span class="token string">\`json:&quot;password&quot;\`</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 存储文件路径</span></span>
<span class="line"><span class="token keyword">const</span> dist <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">&quot;./&quot;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 自定义中间件1</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">myMiddleware1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// before request</span></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">Set</span><span class="token punctuation">(</span><span class="token string">&quot;mid1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;嘎嘎&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;进入第一个中间件...&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// after request</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;离开第一个中间件...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">myMiddleware2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> gin<span class="token punctuation">.</span>HandlerFunc <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// before request</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;进入第二个中间件...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">Get</span><span class="token punctuation">(</span><span class="token string">&quot;mid1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		c<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// after request</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;离开第二个中间件...&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token comment">// 使用默认中间件创建一个gin路由器</span></span>
<span class="line">	<span class="token comment">// logger and recovery (crash-free) 中间件</span></span>
<span class="line">	r <span class="token operator">:=</span> gin<span class="token punctuation">.</span><span class="token function">Default</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// 创建路由分组</span></span>
<span class="line">	api <span class="token operator">:=</span> r<span class="token punctuation">.</span><span class="token function">Group</span><span class="token punctuation">(</span><span class="token string">&quot;/api&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token function">myMiddleware1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Use</span><span class="token punctuation">(</span><span class="token function">myMiddleware2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token comment">// GET 获取路径参数和请求参数</span></span>
<span class="line">		api<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/getMsg/:name&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token comment">// 获取路径参数</span></span>
<span class="line">			name <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">			<span class="token comment">// 获取请求参数</span></span>
<span class="line">			username <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">DefaultQuery</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span></span>
<span class="line">			password <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">Query</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span></span>
<span class="line">				<span class="token string">&quot;name&quot;</span><span class="token punctuation">:</span>     name<span class="token punctuation">,</span></span>
<span class="line">				<span class="token string">&quot;username&quot;</span><span class="token punctuation">:</span> username<span class="token punctuation">,</span></span>
<span class="line">				<span class="token string">&quot;password&quot;</span><span class="token punctuation">:</span> password<span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// POST 获取请求体参数</span></span>
<span class="line">		api<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/testBind&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token keyword">var</span> postParam PostParam</span>
<span class="line"></span>
<span class="line">			<span class="token comment">// 出现错误</span></span>
<span class="line">			<span class="token keyword">if</span> err <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">ShouldBindJSON</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>postParam<span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">				c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusBadRequest<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">:</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">				<span class="token keyword">return</span></span>
<span class="line">			<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> postParam<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// 接收文件</span></span>
<span class="line">		api<span class="token punctuation">.</span><span class="token function">POST</span><span class="token punctuation">(</span><span class="token string">&quot;/uploadFile&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token comment">// 接收单文件</span></span>
<span class="line">			file<span class="token punctuation">,</span> <span class="token boolean">_</span> <span class="token operator">:=</span> c<span class="token punctuation">.</span><span class="token function">FormFile</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span></span>
<span class="line">			<span class="token comment">// 保存到服务器</span></span>
<span class="line">			fullFileName <span class="token operator">:=</span> dist <span class="token operator">+</span> file<span class="token punctuation">.</span>Filename</span>
<span class="line">			c<span class="token punctuation">.</span><span class="token function">SaveUploadedFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> fullFileName<span class="token punctuation">)</span></span>
<span class="line">			c<span class="token punctuation">.</span><span class="token function">JSON</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusOK<span class="token punctuation">,</span> gin<span class="token punctuation">.</span>H<span class="token punctuation">{</span></span>
<span class="line">				<span class="token string">&quot;status&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;上传成功&quot;</span><span class="token punctuation">,</span></span>
<span class="line">			<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">		<span class="token comment">// 下载文件</span></span>
<span class="line">		api<span class="token punctuation">.</span><span class="token function">GET</span><span class="token punctuation">(</span><span class="token string">&quot;/downloadFile&quot;</span><span class="token punctuation">,</span> <span class="token keyword">func</span><span class="token punctuation">(</span>c <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			filepath <span class="token operator">:=</span> <span class="token string">&quot;./1.jpg&quot;</span></span>
<span class="line">			c<span class="token punctuation">.</span><span class="token function">File</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span></span>
<span class="line">		<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	r<span class="token punctuation">.</span><span class="token function">Run</span><span class="token punctuation">(</span><span class="token string">&quot;:8078&quot;</span><span class="token punctuation">)</span> <span class="token comment">// listen and serve on 0.0.0.0:8078</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、gorm" tabindex="-1"><a class="header-anchor" href="#_4、gorm"><span>4、GORM</span></a></h2><h4 id="使用步骤" tabindex="-1"><a class="header-anchor" href="#使用步骤"><span>使用步骤</span></a></h4><ol><li>安装 GORM</li></ol><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">go</span> get <span class="token operator">-</span>u gorm<span class="token punctuation">.</span>io<span class="token operator">/</span>gorm</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>安装 MySQL 驱动</li></ol><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">go</span> get <span class="token operator">-</span>u gorm<span class="token punctuation">.</span>io<span class="token operator">/</span>driver<span class="token operator">/</span>mysql</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>示例代码</li></ol><p>在 GORM 中，结构体与表一一对应，使用结构体标识一张表。</p><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;fmt&quot;</span></span>
<span class="line">	<span class="token string">&quot;gorm.io/driver/mysql&quot;</span></span>
<span class="line">	<span class="token string">&quot;gorm.io/gorm&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	dsn <span class="token operator">:=</span> <span class="token string">&quot;root:991118@tcp(127.0.0.1:3306)/dytest?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span>
<span class="line">	<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>mysql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>dsn<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">if</span> err <span class="token operator">==</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;数据库连接成功&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-go line-numbers-mode" data-highlighter="prismjs" data-ext="go" data-title="go"><pre><code><span class="line"><span class="token keyword">package</span> main</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">(</span></span>
<span class="line">	<span class="token string">&quot;fmt&quot;</span></span>
<span class="line">	<span class="token string">&quot;gorm.io/driver/mysql&quot;</span></span>
<span class="line">	<span class="token string">&quot;gorm.io/gorm&quot;</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// GoUser 数据库表对应的结构体</span></span>
<span class="line"><span class="token keyword">type</span> GoUser <span class="token keyword">struct</span> <span class="token punctuation">{</span></span>
<span class="line">	gorm<span class="token punctuation">.</span>Model</span>
<span class="line">	Name   <span class="token builtin">string</span></span>
<span class="line">	Age    <span class="token builtin">int</span></span>
<span class="line">	Gender <span class="token builtin">bool</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	dsn <span class="token operator">:=</span> <span class="token string">&quot;root:991118@tcp(localhost:3306)/dytest?charset=utf8mb4&amp;parseTime=True&amp;loc=Local&quot;</span></span>
<span class="line">	db<span class="token punctuation">,</span> err <span class="token operator">:=</span> gorm<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>mysql<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span>dsn<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>gorm<span class="token punctuation">.</span>Config<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">&quot;无法连接到数据库: &quot;</span> <span class="token operator">+</span> err<span class="token punctuation">.</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;连接数据库成功&quot;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token comment">// 切换使用的数据库表</span></span>
<span class="line">	db<span class="token punctuation">.</span><span class="token function">AutoMigrate</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>GoUser<span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token comment">// 增</span></span>
<span class="line">	user <span class="token operator">:=</span> <span class="token operator">&amp;</span>GoUser<span class="token punctuation">{</span>Name<span class="token punctuation">:</span> <span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span> Age<span class="token punctuation">:</span> <span class="token number">24</span><span class="token punctuation">,</span> Gender<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">}</span></span>
<span class="line">	db<span class="token punctuation">.</span><span class="token function">Create</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 查</span></span>
<span class="line">	<span class="token keyword">var</span> userGot GoUser</span>
<span class="line">	db<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>userGot<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>userGot<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 改</span></span>
<span class="line">	db<span class="token punctuation">.</span><span class="token function">Model</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>userGot<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Update</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 删</span></span>
<span class="line">	db<span class="token punctuation">.</span><span class="token function">Delete</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>userGot<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,53),u=[o];function r(d,k){return a(),s("div",null,u)}const m=n(c,[["render",r],["__file","Gin示例程序.html.vue"]]),b=JSON.parse('{"path":"/dev/go/gin/Gin%E7%A4%BA%E4%BE%8B%E7%A8%8B%E5%BA%8F.html","title":"一、Gin 示例程序","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1、搭建 Gin 服务器步骤","slug":"_1、搭建-gin-服务器步骤","link":"#_1、搭建-gin-服务器步骤","children":[]},{"level":2,"title":"2、接口参数获取","slug":"_2、接口参数获取","link":"#_2、接口参数获取","children":[{"level":3,"title":"(1) GET 请求获取路径参数和请求参数","slug":"_1-get-请求获取路径参数和请求参数","link":"#_1-get-请求获取路径参数和请求参数","children":[]},{"level":3,"title":"(2) POST 请求获取请求体中的参数","slug":"_2-post-请求获取请求体中的参数","link":"#_2-post-请求获取请求体中的参数","children":[]},{"level":3,"title":"(3) 文件的接收与返回","slug":"_3-文件的接收与返回","link":"#_3-文件的接收与返回","children":[]}]},{"level":2,"title":"3、路由分组与中间件","slug":"_3、路由分组与中间件","link":"#_3、路由分组与中间件","children":[]},{"level":2,"title":"4、GORM","slug":"_4、gorm","link":"#_4、gorm","children":[]}],"git":{"updatedTime":1721491077000,"contributors":[{"name":"ZhangZiYi","email":"ecustzzy1@163.com","commits":1}]},"filePathRelative":"dev/go/gin/Gin示例程序.md"}');export{m as comp,b as data};
